/*!

    \file SpindleControl.dox
    \addtogroup SpindleControl
    \brief This file contains the doxygen description and diagram illustrating the .hal components I use with the GS2 VFD on the mill.

    \addtogroup SpindleControl

    This diagram illustrates the .hal components I use with a GS2 VFD using the serial communications.

    Spindle encoder is intended for rigid tapping. It is not always functional and is linked to vfd freq via pulley ratio.
    Note, pid is not currently used to get the correct rpm from the vfd. 
    The fault relay is documented in the estoplatch documentation.

    \dot
        digraph structs {
            concentrate=true
            rankdir="LR"
            label="Mill spindle control."
            subgraph cluster_spindle{
                label="spindle.0"
                node [shape=plaintext]
                spindle_0 [shape="box" label=<
                    <TABLE>
                        <TR> 
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0" ALIGN="LEFT">
                                    <TR><TD port="i0">revs</TD></TR>
                                    <TR><TD port="i1">speed-in</TD></TR>
                                    <TR><TD port="i2">at-speed</TD></TR>                                    
                                </TABLE>
                            </TD>
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0" ALIGN="RIGHT">
                                    <TR><TD ALIGN="RIGHT" port="o0"> speed-out</TD></TR> 
                                    <TR><TD ALIGN="RIGHT" port="o1"> on </TD></TR> 
                                    <TR><TD ALIGN="RIGHT" port="o2"> forward </TD></TR> 
                                    <TR><TD ALIGN="RIGHT" port="o3"> reverse </TD></TR> 
                                    <TR><TD ALIGN="RIGHT" port="o4"> index-enable </TD></TR> 
                                </TABLE>
                            </TD>
                        </TR>                                             
                    </TABLE>
                >]
            }

            subgraph cluster_encoder {
                label="hm.0.encoder.02"
                encoder [shape="box" label=<
                    <TABLE CELLBORDER="0" BORDER="0">
                       <TR><TD ALIGN="LEFT" port="o0">position</TD></TR>
                        <TR><TD ALIGN="LEFT" port="o1">velocity</TD></TR>                  
                        <TR><TD ALIGN="LEFT" port="o2">velocity-rpm</TD></TR>                  
                        <TR><TD ALIGN="LEFT" port="o3">index-enable</TD></TR>                  
                    </TABLE>
                >
                ]
            }

            subgraph cluster_pid_s{
                label="pid.s"
                pid_s [shape="box" label=<
                    <TABLE>
                        <TR> 
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0">
                                   <TR><TD ALIGN="LEFT" port="i0">command</TD></TR>
                                   <TR><TD ALIGN="LEFT" port="i1">enable</TD></TR>
                                   <TR><TD ALIGN="LEFT" port="i2">index-enable</TD></TR>
                                </TABLE>
                            </TD>
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0">
                                    <TR><TD ALIGN="RIGHT" port="o0">output</TD></TR> 
                                </TABLE>
                            </TD>
                        </TR> 
                        
                        <TR>
                            <TD COLSPAN="2">
                            <TABLE CELLBORDER="0" BORDER="0">
                                <TR >
                                    <TD port="f0">feedback</TD>
                                </TR>
                            </TABLE>
                            </TD>
                        </TR>
                    
                    </TABLE>
                >
                ]
            }

            subgraph cluster_vfd{
                label="vfd"
                vfd [shape="box" label=<
                    <TABLE>
                        <TR><TD>
                            <TABLE CELLBORDER="0" BORDER="0">
                                   <TR><TD ALIGN="LEFT" port="i0">speed-command</TD></TR>
                                   <TR><TD ALIGN="LEFT" port="i1">spindle-on</TD></TR>
                                   <TR><TD ALIGN="LEFT" port="i2">spindle-fwd</TD></TR>
                                   <TR><TD ALIGN="LEFT" port="i3">spindle-rev</TD></TR>
                            </TABLE>
                        </TD>
                        <TD>
                            <TABLE CELLBORDER="0" BORDER="0">
                                    <TR><TD ALIGN="RIGHT" port="o0">motor-RPM</TD></TR> 
                                    <TR><TD ALIGN="RIGHT" port="o1">at-speed</TD></TR> 
                                    <TR><TD ALIGN="RIGHT" port="o2">spindle-frequency</TD></TR> 
                            </TABLE>
                        </TD></TR>                    
                    </TABLE>
                >]
            }

            subgraph cluster_gmoccapy {
                label="gmoccapy"
                color="green"
                fontcolor="green"
                gmoccapy [shape="box" color="green" fontcolor="green" label=<
                    <TABLE CELLBORDER="0" BORDER="0">
                       <TR><TD ALIGN="LEFT" port="i0">spindle-feedback-bar</TD></TR>
                       <TR><TD ALIGN="LEFT" port="i1">spindle-at-speed-led</TD></TR>
                    </TABLE>
                >
                ]
            }

            subgraph cluster_pyvcb{
                color="red"
                fontcolor="red"
                label="pyvcp [optional]"
                pyvcp [ shape="box" color="red" fontcolor="red" label=<
                    <TABLE CELLBORDER="0" BORDER="0">
                       <TR><TD ALIGN="LEFT" port="i0">spindle-at-speed-led</TD></TR>
                    </TABLE>
                >
                ]
            }

            n10 [style=invis];

            spindle_0:o0 -> vfd:i0      [label="spindle-vel-cmd-rpm" fontsize = "12" fontcolor="blue" color="blue"];
            spindle_0:o1 -> vfd:i1      [label="spindle-enable" fontsize = "12" fontcolor="blue" color="blue"];
            spindle_0:o2 -> vfd:i2      [label="spindle-cw"  fontsize = "12" fontcolor="blue" color="blue"];
            spindle_0:o3 -> vfd:i3      [label="spindle-ccw" fontsize = "12" fontcolor="blue" color="blue"];

            encoder:o0 -> spindle_0:i0  [label="spindle-revs"];
            encoder:o1 -> n10           [label="spindle-vel-fb-rps"];
            encoder:o3 -> spindle_0:o4 [label="spindle-index-enable" fontsize = "12" fontcolor="blue" color="blue"];

            vfd:o0:e -> gmoccapy:i0     [label="spindle-rpm"        fontsize = "12" fontcolor="blue" color="blue"];
            vfd:o1 -> pyvcp:i0          [label="spindle-at-speed"   fontsize = "12" fontcolor="blue" color="blue"];
            vfd:o1 -> gmoccapy:i1:w     [color="blue"];
            vfd:o1:e -> spindle_0:i2:w  [color="blue"];
        }
    \enddot
*/

/*
vfd:o2:e -> spindle_0:i1    [label="spindle-frequency"  fontsize = "12" fontcolor="blue" color="blue"];

net spindle-vel-cmd-rpm <= spindle-vfd.speed-command
net spindle-enable      <= spindle-vfd.spindle-on 
net spindle-cw          <= spindle-vfd.spindle-fwd
net spindle-ccw         <= spindle-vfd.spindle-rev
net spindle-at-speed    <= spindle-vfd.at-speed

net spindle-at-speed           =>  spindle.0.at-speed

net spindle-vel-cmd-rpm        <=  spindle.0.speed-out
net spindle-enable             <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-vel-fb-rps         =>  spindle.0.speed-in

*/

