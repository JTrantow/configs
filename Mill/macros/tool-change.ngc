O<tool-change> SUB
( see: http://www.linuxcnc.org/index.php/english/forum/10-advanced-configuration/5596-manual-tool-change--tool-lengh-touch-off?start=30#48235 )
( Filename: tool-change.ngc )
( Usage: M6 in the g-code will invoke a manual tool change with automatic tool height adjustment. )
( This script is setup for use with manual tool changes and automatic tool length measurement suitable for use with a collet system. )
( This script is only concerned with setting the tool length and has nothing to do with measuring the work piece. )
( Set the tool length sensor height using "M6 T0" or "G10 L2 P9 Z150.0" Where the Z value is the spindle nose/collet triggering the sensor. )
( With this method the tool length is reference relative to the spindle nose/collet. )
( Uses G10 L11 to set height relative to absolute coordinates so this script is independent of G54 coordinate systems other than P9. )

( Side effects: sets motion mode to G1. )

(------------------------------- CONFIGURATION PARAMETERS ----------------------------------------------)
( Note: Use [TOOLSENSOR] and [CHANGE_POSITION] ini variables from probe_screen_v2.) 
( NOTE: I added a new [TOOLSENSOR]RETRACT_HEIGHT. )
( Note: Uses gmoccapy toolmeasurement, searchvel, probevel values. )
( Note: Uses the following linuxcnc parameters. See https://www.linuxcnc.org/docs/html/gcode/overview.html#sub:numbered-parameters)
(       #5063 Reference tool length.)
(       #5070 Probe contact.)
(       #5163 Absolute machine coordinate Z from last G28.1.)
(       #5400 Current tool number.)
( Return values: )
(      -1 indicate searchvel <= 0 )
(      -2 indicate probevel <= 0 )
(      -3 indicate probe contact failure to epilog)
(       1 Successful measurement.)
(       2 Tool number hasn't changed, measurement skipped.)
(       3 gmoccapy.toolmeasurement == 0)
(       999 subroutine run from wrong thread. )

;otherwise after the M6 this information is gone!
#<tool> = #<selected_tool>
#<pocket> = #<selected_pocket>

( Execute this subroutine only in the milltask interpreter or preview will break. )
O100 if [#<_task> EQ 0]
        (debug, Task ist Null)
O<tool-change> return [999]
O100 endif

O200 if [#<_hal[gmoccapy.toolmeasurement]> EQ 0]
      (debug toolmeasurement 0)
O<tool-change> return [3] ; indicate no tool measurement requested.
O200 endif

M70                                            ( save current modal state before changing G90 )

O220 if [#<tool> GT 0] 
  O221 if [#<tool> EQ #5400]
    ;(debug, Tool #<tool> is already set? How can I give an option to skip measure?)
O<tool-change> return [2]    
  O221 ELSE
    ;(debug, tool #<tool> 5400 #5400 normal TLM.)
  O221 endif
O220 ELSE
  ;(debug, tool T0 needs measurement.)
O220 endif

;
; Only move up for safe Tool Change. If we are already higher, don't go down which is slow on knee mill).
; This conditional should be removed with an ATC.
;
G28.1                                          (Save absolute machine coordinates to parameters.)
G90                                            ( Notice G53 requires absolute mode. Aborts can end up in G91.)
O250 if [#5163 GT #<_ini[CHANGE_POSITION]Z>] 
  ;(debug, Above G28.1 CHANGE_POSITION Z#<_ini[CHANGE_POSITION]Z>)
O250 ELSE
  ;(debug, Move up to toolchange position.)
  G53 G0 Z[#<_ini[CHANGE_POSITION]Z>]
O250 ENDIF
G53 G0 X[#<_ini[CHANGE_POSITION]X>] Y[#<_ini[CHANGE_POSITION]Y>] 

M6                                             ( do the normal M6 stuff, tool change prompt)

;
;  Verify the search and probe velocity after M6 in case they get changed. 
;
O300 if [#<_hal[gmoccapy.searchvel]> LE 0]
   (debug, searchvel non-positive)
O300 return [-1] ; indicate searchvel <= 0 
O300 endif
O400 if [#<_hal[gmoccapy.probevel]> LE 0]
   (debug, probevel non-positive)
O<tool-change> return [-2] ; indicate probevel <= 0 
O400 endif

M9                                             ( turn off coolant, will be restored on return if it was on )
M5                                             ( turn off spindle, cannot be on during the probe )
G49                                            ( clear tool length compensation )
G94                                            ( use feedrate in units/min )
G40                                            ( turn cutter radius compensation off here )

;
; Only move up for safe TLM. If we are already higher, don't go down.
;
G28.1                                          (Save absolute machine coordinates to parameters.)
G90                                            ( Notice G53 requires absolute mode. Aborts can end up in G91.)
O450 if [#5163 GT #<_ini[TOOLSENSOR]Z> ]  
  ;(debug, Above TOOLSENSOR Z#<_ini[TOOLSENSOR]Z>)
O450 ELSE
  ;(debug, Move up to TLM position.)
  G53 G0 Z[#<_ini[TOOLSENSOR]Z>]             ( go to safe probe travel level on Z )
O450 endif

G53 G0 X[#<_ini[TOOLSENSOR]X>] Y[#<_ini[TOOLSENSOR]Y>]   ( move directly over the tool length sensor)
G91                                          ( use relative positioning during probing, coordinate system doesn't matter. )


;G38.2 - probe toward workpiece, stop on contact, signal error if failure
;G38.2 Z[#<_ini[TOOLSENSOR]MAXPROBE>] F[#<_hal[gmoccapy.searchvel]>]
G38.2 Z-[#5163 - 70] F[#<_hal[gmoccapy.searchvel]>]
G1    Z[#<_ini[TOOLSENSOR]RETRACT_HEIGHT>]
G38.2 Z[#<_ini[TOOLSENSOR]RETRACT_HEIGHT> * -1.25] F[#<_hal[gmoccapy.probevel]>] (Search 25% further than retraction, then probe slowly to the trip point.)

O500 if [#5070 EQ 0]
     G90
  (debug, indicate probe contact failure to epilog)
O<tool-change> return [-3] ; indicate probe contact failure to epilog
O500 endif

;
; Check the current tool number.
;
O900 IF [#5400 NE 0 ]
  ;
  ; Non-zero tool numbers will modify the tool table Z length.
  ; G10 L11 Set Tool Table
  ; Set height relative to absolute coordinates so this script is independent of coordinate systems other than P9. 
  ; This allows the user to set the G59.3 coordinate system according to a fixed point on the machine, and then use that fixture to measure tools without regard to other currently-active offsets.
  ;
  ;(debug, non-zero Tool uses G10 L11 P#5400 Z0.0)
  G10 L11 P#5400 Z0.0                          ( G59.3 Coordinate system 9 Z should be set to tool sensor height using an empty spindle.)
  G43 H#5400                                   ( Reload the tool length offsets from the changed tool table.)
O900 ELSE
  ;
  ; G10 L2 Set Coordinate System
  ; Zero tool will set the tool length sensor offset in P9 for subsequent tools. Recommend using an empty spindle for tool 0.
  ; Does not change coordinate system in use.
  ;  
  G28.1
  (debug, T0 sets P9 with G10 L2 P9 #5163)
  G10 L2 P9 Z#5163 
O900 ENDIF

( Move to safe TOOLSENSOR Z position. With knee mill I want to avoid going all the way back to TOOLSENSOR Z)
( other machines should probably return to Z[#<_ini[TOOLSENSOR]Z>.)
;G91
;G1    Z10 F[#<_hal[gmoccapy.searchvel]>]
G90                                          ( G53 requires absolute positioning. )
G53 G0 Z[#<_ini[TOOLSENSOR]Z>]               ( Move to safe level )

M72                                          ( restore modal state )
G43 H#5400                                   ( Reload the tool length offsets from the changed tool table.)

; signal success by returning a value > 0:
O<tool-change> ENDSUB [1] 
M2