loadrt [KINS](KINEMATICS)
loadrt [EMCMOT](EMCMOT) servo_period_nsec=[EMCMOT](SERVO_PERIOD) num_joints=[KINS](JOINTS)
loadrt hostmot2
loadrt [HM2](DRIVER) board_ip=[HM2](ADDRESS) config="num_encoders=4 num_stepgens=4"
setp   [MESA](CARD0).watchdog.timeout_ns 5000000
loadrt pid names=pid.x,pid.y,pid.z

addf [MESA](CARD0).read servo-thread
addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf [MESA](CARD0).write servo-thread

#setp [MESA](CARD0).dpll.01.timer-us -50
#setp [MESA](CARD0).stepgen.timer-number 1

#*******************
#  AXIS X JOINT 0
#*******************
setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
setp   pid.x.error-previous-target true
setp   pid.x.maxerror 0.0

net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-output        <=  pid.x.output

# Step Gen signals/setup

setp   [MESA](CARD0).stepgen.00.dirsetup        [JOINT_0]DIRSETUP
setp   [MESA](CARD0).stepgen.00.dirhold         [JOINT_0]DIRHOLD
setp   [MESA](CARD0).stepgen.00.steplen         [JOINT_0]STEPLEN
setp   [MESA](CARD0).stepgen.00.stepspace       [JOINT_0]STEPSPACE
setp   [MESA](CARD0).stepgen.00.position-scale  [JOINT_0]STEP_SCALE
setp   [MESA](CARD0).stepgen.00.step_type        0
setp   [MESA](CARD0).stepgen.00.control-type     1
setp   [MESA](CARD0).stepgen.00.maxaccel         [JOINT_0]STEPGEN_MAXACCEL
setp   [MESA](CARD0).stepgen.00.maxvel           [JOINT_0]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-output     => [MESA](CARD0).stepgen.00.velocity-cmd
net x-enable     <= joint.0.amp-enable-out
net x-enable     => [MESA](CARD0).stepgen.00.enable

# ---Encoder feedback signals/setup---

setp    [MESA](CARD0).encoder.00.counter-mode 0
setp    [MESA](CARD0).encoder.00.filter 1
setp    [MESA](CARD0).encoder.00.index-invert 0
setp    [MESA](CARD0).encoder.00.index-mask 0
setp    [MESA](CARD0).encoder.00.index-mask-invert 0
setp    [MESA](CARD0).encoder.00.scale  [JOINT_0]ENCODER_SCALE

#
# If you want to use -pos-fb from the stepgenposition-fb with HOME_USE_INDEX or the encoder position as joint fb,  then you will need to use a bit file that supports stepgen.00.index-enable.
# This is required when using stepgen posititon for feedback and doesn't hurt when you use the encoder for feedback.
#
net x-index-enable  <=> joint.0.index-enable  <=>  [MESA](CARD0).encoder.00.index-enable <=>  pid.x.index-enable <=> [MESA](CARD0).stepgen.00.index-enable
#
# Use the available joint velocity instead of PID estimate.
# PCW says this shouldn't be used??? But forum inidicates it should be fine in 2.9.2 https://forum.linuxcnc.org/39-pncconf/38320-command-derivative
# If you use command-deriv make sure it's connected to vel-cmd.
net x-vel-cmd        <= joint.0.vel-cmd  => pid.x.command-deriv

#
# PNCConf default config. Use this with P=1000, FF1=1.0.
#
#setp   pid.x.Pgain     1000.0
#setp   pid.x.Igain     0.0
#setp   pid.x.FF1       1.0
#net x-pos-fb         <= [MESA](CARD0).stepgen.00.position-fb  => pid.x.feedback  => joint.0.motor-pos-fb
#
# Enable/Disable BOTH the following TWO lines to use the encoder to close the control loop.
# Use both the encoder position and velocity.
# This should be the optimal configuration.
#
net x-pos-fb         <= [MESA](CARD0).encoder.00.position  => pid.x.feedback        => joint.0.motor-pos-fb
net x-vel-fb         <= [MESA](CARD0).encoder.00.velocity  => pid.x.feedback-deriv

# ---setup home / limit switch signals---
net x-home-sw        <= [MESA](CARD0).gpio.019.in =>  joint.0.home-sw-in joint.0.neg-lim-sw-in

#*******************
#  AXIS Y JOINT 1
#*******************
#
# The first PID compensates for servo thread timestamp dither. 
# For a closed loop stepper (where the motor is closed by the driver) with 1khz servo loop, use P=1000, FF1=1.0.
#
setp   pid.y.Pgain     [JOINT_1]P
setp   pid.y.Igain     [JOINT_1]I
setp   pid.y.Dgain     [JOINT_1]D
setp   pid.y.bias      [JOINT_1]BIAS
setp   pid.y.FF0       [JOINT_1]FF0
setp   pid.y.FF1       [JOINT_1]FF1
setp   pid.y.FF2       [JOINT_1]FF2
setp   pid.y.deadband  [JOINT_1]DEADBAND
setp   pid.y.maxoutput [JOINT_1]MAX_OUTPUT
setp   pid.y.error-previous-target true
setp   pid.y.maxerror 0.0

net y-pos-cmd       =>  pid.y.command
net y-output        <=  pid.y.output
net y-enable        =>  pid.y.enable
#
# Stepgen setup
#
setp   [MESA](CARD0).stepgen.01.dirsetup        [JOINT_1]DIRSETUP
setp   [MESA](CARD0).stepgen.01.dirhold         [JOINT_1]DIRHOLD
setp   [MESA](CARD0).stepgen.01.steplen         [JOINT_1]STEPLEN
setp   [MESA](CARD0).stepgen.01.stepspace       [JOINT_1]STEPSPACE
setp   [MESA](CARD0).stepgen.01.position-scale  [JOINT_1]STEP_SCALE
setp   [MESA](CARD0).stepgen.01.step_type        0
setp   [MESA](CARD0).stepgen.01.control-type     1
setp   [MESA](CARD0).stepgen.01.maxaccel         [JOINT_1]STEPGEN_MAXACCEL
setp   [MESA](CARD0).stepgen.01.maxvel           [JOINT_1]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net y-output     => [MESA](CARD0).stepgen.01.velocity-cmd
net y-enable     <= joint.1.amp-enable-out              => [MESA](CARD0).stepgen.01.enable
net y-pos-cmd    <= joint.1.motor-pos-cmd

#
# ---Encoder feedback signals/setup---
#
setp    [MESA](CARD0).encoder.01.counter-mode 0
setp    [MESA](CARD0).encoder.01.filter 1
setp    [MESA](CARD0).encoder.01.index-invert 0
setp    [MESA](CARD0).encoder.01.index-mask 0
setp    [MESA](CARD0).encoder.01.index-mask-invert 0
setp    [MESA](CARD0).encoder.01.scale  [JOINT_1]ENCODER_SCALE

#
# If you want to use -pos-fb from the stepgenposition-fb with HOME_USE_INDEX or the encoder position as joint fb,  then you will need to use a bit file that supports stepgen.00.index-enable.
# This is required when using stepgen posititon for feedback and doesn't hurt when you use the encoder for feedback.
#
net y-index-enable  <=> joint.1.index-enable  <=>  [MESA](CARD0).encoder.01.index-enable <=>  pid.y.index-enable <=> [MESA](CARD0).stepgen.01.index-enable
#
# Use the available joint velocity instead of PID estimate.
# PCW says this shouldn't be used??? But forum inidicates it should be fine in 2.9.2 https://forum.linuxcnc.org/39-pncconf/38320-command-derivative
# If you use command-deriv make sure it's connected to vel-cmd.
net y-vel-cmd        <= joint.1.vel-cmd  => pid.y.command-deriv
#
#   Using an encoder with a stepper motor.
# STEP 1. Use the PNCConf default configuration using -pos-fb signal using stepgen position-fb. (Comment out the .hal line with "net -pos-fb <= [MESA](CARD0).encoder.01.position")
#
# When this works, it just tells you that the stepper driver told the motor to move. This will not catch problems that the encoder might. (motor spins but bad coupling, stepper step skip, etc..)
#setp   pid.y.Pgain     1000.0
#setp   pid.y.FF1       1.0
#net y-pos-fb         <= [MESA](CARD0).stepgen.01.position-fb  => pid.y.feedback  => joint.1.motor-pos-fb
#
# Use encoder position for pid feedback and joint motor-pos-fb.\
#
# Enable/Disable the following lines to use the encoder for both joint and pid.
# IFF you use the encoder position for pid feedback, also use encoder velocity for feedback-deriv see https://forum.linuxcnc.org/10-advanced-configuration/37989-2-8-2-9-pid-seems-broken
#
# This requires PID tuning and should be the optimal configuration.
#
net y-pos-fb         <= [MESA](CARD0).encoder.01.position  => pid.y.feedback        => joint.1.motor-pos-fb
net y-vel-fb         <= [MESA](CARD0).encoder.01.velocity  => pid.y.feedback-deriv

# ---setup home / limit switch signals---
net y-home-sw   <= [MESA](CARD0).gpio.021.in    =>  joint.1.home-sw-in   joint.1.pos-lim-sw-in

#*******************
#  AXIS Z JOINT 2
#*******************
setp   pid.z.Pgain     [JOINT_2]P
setp   pid.z.Igain     [JOINT_2]I
setp   pid.z.Dgain     [JOINT_2]D
setp   pid.z.bias      [JOINT_2]BIAS
setp   pid.z.FF0       [JOINT_2]FF0
setp   pid.z.FF1       [JOINT_2]FF1
setp   pid.z.FF2       [JOINT_2]FF2
setp   pid.z.deadband  [JOINT_2]DEADBAND
setp   pid.z.maxoutput [JOINT_2]MAX_OUTPUT
setp   pid.z.error-previous-target true
setp   pid.z.maxerror 0.0

net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-output        <=  pid.z.output

# Step Gen signals/setup

setp   [MESA](CARD0).stepgen.02.dirsetup        [JOINT_2]DIRSETUP
setp   [MESA](CARD0).stepgen.02.dirhold         [JOINT_2]DIRHOLD
setp   [MESA](CARD0).stepgen.02.steplen         [JOINT_2]STEPLEN
setp   [MESA](CARD0).stepgen.02.stepspace       [JOINT_2]STEPSPACE
setp   [MESA](CARD0).stepgen.02.position-scale  [JOINT_2]STEP_SCALE
setp   [MESA](CARD0).stepgen.02.step_type        0
setp   [MESA](CARD0).stepgen.02.control-type     1
setp   [MESA](CARD0).stepgen.02.maxaccel         [JOINT_2]STEPGEN_MAXACCEL
setp   [MESA](CARD0).stepgen.02.maxvel           [JOINT_2]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net z-pos-cmd    <= joint.2.motor-pos-cmd
net z-output     => [MESA](CARD0).stepgen.02.velocity-cmd
net z-enable     <= joint.2.amp-enable-out
net z-enable     => [MESA](CARD0).stepgen.02.enable

# ---Encoder feedback signals/setup---

setp    [MESA](CARD0).encoder.02.counter-mode 0
setp    [MESA](CARD0).encoder.02.filter 1
setp    [MESA](CARD0).encoder.02.index-invert 0
setp    [MESA](CARD0).encoder.02.index-mask 0
setp    [MESA](CARD0).encoder.02.index-mask-invert 0
setp    [MESA](CARD0).encoder.02.scale  [JOINT_2]ENCODER_SCALE

#
# If you want to use -pos-fb from the stepgenposition-fb with HOME_USE_INDEX or the encoder position as joint fb,  then you will need to use a bit file that supports stepgen.00.index-enable.
# This is required when using stepgen posititon for feedback and doesn't hurt when you use the encoder for feedback.
#
net z-index-enable  <=> joint.2.index-enable  <=>  [MESA](CARD0).encoder.02.index-enable <=>  pid.z.index-enable <=> [MESA](CARD0).stepgen.02.index-enable
#
# Use the available joint velocity instead of PID estimate.
# PCW says this shouldn't be used??? But forum inidicates it should be fine in 2.9.2 https://forum.linuxcnc.org/39-pncconf/38320-command-derivative
# If you use command-deriv make sure it's connected to vel-cmd.
net z-vel-cmd        <= joint.2.vel-cmd  => pid.z.command-deriv

#
# PNCConf default config. Use this with P=1000, FF1=1.0.
#
#net z-pos-fb         <= [MESA](CARD0).stepgen.02.position-fb  => pid.z.feedback  => joint.2.motor-pos-fb
#
# Enable/Disable BOTH the following TWO lines to use the encoder to close the control loop.
# Use both the encoder position and velocity.
# This should be the optimal configuration.
net z-pos-fb         <= [MESA](CARD0).encoder.02.position  => pid.z.feedback        => joint.2.motor-pos-fb
net z-vel-fb         <= [MESA](CARD0).encoder.02.velocity  => pid.z.feedback-deriv

# ---setup home / limit switch signals---
net z-home-sw        <= [MESA](CARD0).gpio.017.in             =>  joint.2.home-sw-in      joint.2.pos-lim-sw-in
