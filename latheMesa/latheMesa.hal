#
#   Manually editted config file for latheMesa.
#
loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadrt hostmot2
loadrt hm2_eth board_ip="10.10.10.10" config=" num_encoders=3 num_pwmgens=0 num_stepgens=4 sserial_port_0=00xxxx" 
setp    hm2_7i96.0.watchdog.timeout_ns 5000000
loadrt pid names=pid.x,pid.z,pid.s

loadrt pwmgen output_type=1

addf pwmgen.make-pulses servo-thread
addf pwmgen.update servo-thread

addf hm2_7i96.0.read          servo-thread
addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
addf hm2_7i96.0.write         servo-thread

#*******************
#  AXIS X JOINT 0
#*******************

setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
setp   pid.x.error-previous-target true
# This setting is to limit bogus stepgen velocity corrections caused by position feedback sample time jitter.
setp   pid.x.maxerror 0.012700

net x-index-enable  <=> pid.x.index-enable
net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-output        <=  pid.x.output

# Step Gen signals/setup

setp   hm2_7i96.0.stepgen.00.dirsetup        [JOINT_0]DIRSETUP
setp   hm2_7i96.0.stepgen.00.dirhold         [JOINT_0]DIRHOLD
setp   hm2_7i96.0.stepgen.00.steplen         [JOINT_0]STEPLEN
setp   hm2_7i96.0.stepgen.00.stepspace       [JOINT_0]STEPSPACE
setp   hm2_7i96.0.stepgen.00.position-scale  [JOINT_0]STEP_SCALE
setp   hm2_7i96.0.stepgen.00.step_type        0
setp   hm2_7i96.0.stepgen.00.control-type     1
setp   hm2_7i96.0.stepgen.00.maxaccel         [JOINT_0]STEPGEN_MAXACCEL
setp   hm2_7i96.0.stepgen.00.maxvel           [JOINT_0]STEPGEN_MAXVEL

net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-output     <= hm2_7i96.0.stepgen.00.velocity-cmd
net x-enable     <= joint.0.amp-enable-out
net x-enable     => hm2_7i96.0.stepgen.00.enable

#
# The Trajectory Planner gives us the velocity. Using this signal with the PID avoids estimating the velocity command.
#
net x-vel-cmd        <= joint.0.vel-cmd                 =>  pid.x.command-deriv
#
# Enable/Disable BOTH the following TWO lines to use the encoder to close the control loop.
# Use both the encoder position and velocity.
#
net x-pos-fb         <= hm2_7i96.0.encoder.00.position  => pid.x.feedback => joint.0.motor-pos-fb
net x-vel-fb         <= hm2_7i96.0.encoder.00.velocity  => pid.x.feedback-deriv
#
# Enable/Disable BOTH the following TWO line to use stepgen position to close the control loop.
# Add a new signal from encoder position so it can be used independent of pid fb signal. This allows encoder to be used as DRO without closing the control loop.
# Do not use the encoder x-vel-fb is you are using the stepgen position for x-pos-fb.
#
#net x-pos-encoder    <= hm2_7i96.0.encoder.00.position     => joint.0.motor-pos-fb
#net x-pos-fb         <= hm2_7i96.0.stepgen.00.position-fb  => pid.x.feedback 

# ---setup home / limit switch signals--- 
net x-home-sw       <= hm2_7i96.0.gpio.001.in_not =>  joint.0.home-sw-in joint.0.pos-lim-sw-in

# ---Encoder feedback signals/setup---

setp    hm2_7i96.0.encoder.00.counter-mode 0
setp    hm2_7i96.0.encoder.00.filter 1
setp    hm2_7i96.0.encoder.00.index-invert 0
setp    hm2_7i96.0.encoder.00.index-mask 0
setp    hm2_7i96.0.encoder.00.index-mask-invert 0
setp    hm2_7i96.0.encoder.00.scale  1000
net x-vel-fb         <= hm2_7i96.0.encoder.00.velocity
net x-index-enable   <= joint.0.index-enable            =>  hm2_7i96.0.encoder.00.index-enable


#*******************
#  AXIS Z JOINT 1
#*******************

setp   pid.z.Pgain     [JOINT_1]P
setp   pid.z.Igain     [JOINT_1]I
setp   pid.z.Dgain     [JOINT_1]D
setp   pid.z.bias      [JOINT_1]BIAS
setp   pid.z.FF0       [JOINT_1]FF0
setp   pid.z.FF1       [JOINT_1]FF1
setp   pid.z.FF2       [JOINT_1]FF2
setp   pid.z.deadband  [JOINT_1]DEADBAND
setp   pid.z.maxoutput [JOINT_1]MAX_OUTPUT
setp   pid.z.error-previous-target true
# This setting is to limit bogus stepgen velocity corrections caused by position feedback sample time jitter.
setp   pid.z.maxerror 0.012700

net z-index-enable  <=> pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-output        <=  pid.z.output

# Step Gen signals/setup

setp   hm2_7i96.0.stepgen.02.dirsetup        [JOINT_1]DIRSETUP
setp   hm2_7i96.0.stepgen.02.dirhold         [JOINT_1]DIRHOLD
setp   hm2_7i96.0.stepgen.02.steplen         [JOINT_1]STEPLEN
setp   hm2_7i96.0.stepgen.02.stepspace       [JOINT_1]STEPSPACE
setp   hm2_7i96.0.stepgen.02.position-scale  [JOINT_1]STEP_SCALE
setp   hm2_7i96.0.stepgen.02.step_type        0
setp   hm2_7i96.0.stepgen.02.control-type     1
setp   hm2_7i96.0.stepgen.02.maxaccel         [JOINT_1]STEPGEN_MAXACCEL
setp   hm2_7i96.0.stepgen.02.maxvel           [JOINT_1]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net z-pos-cmd    <= joint.1.motor-pos-cmd
net z-output     <= hm2_7i96.0.stepgen.02.velocity-cmd
net z-enable     <= joint.1.amp-enable-out
net z-enable     => hm2_7i96.0.stepgen.02.enable

#
# The Trajectory Planner gives us the velocity. Using this signal with the PID avoids estimating the velocity command.
#
net z-vel-cmd        <= joint.1.vel-cmd                =>  pid.z.command-deriv
#
# Enable/Disable BOTH the following TWO lines to use the encoder to close the control loop.
# Use both the encoder position and velocity.
#
net z-pos-fb         <= hm2_7i96.0.encoder.01.position  => pid.z.feedback => joint.1.motor-pos-fb
net z-vel-fb         <= hm2_7i96.0.encoder.01.velocity  => pid.z.feedback-deriv
#
# Enable/Disable BOTH the following TWO line to use stepgen position to close the control loop.
# Add a new signal from encoder position so it can be used independent of pid fb signal. This allows encoder to be used as DRO without closing the control loop.
# Do not use the encoder -vel-fb is you are using the stepgen position for -pos-fb.
#
#net z-pos-encoder    <= hm2_7i96.0.encoder.01.position     => joint.1.motor-pos-fb
#net z-pos-fb         <= hm2_7i96.0.stepgen.01.position-fb  => pid.z.feedback 


# ---setup home / limit switch signals---

net z-home-sw     =>  joint.1.home-sw-in
net z-neg-limit     =>  joint.1.neg-lim-sw-in
net z-pos-limit     =>  joint.1.pos-lim-sw-in

# ---Encoder feedback signals/setup---

setp    hm2_7i96.0.encoder.01.counter-mode 0
setp    hm2_7i96.0.encoder.01.filter 1
setp    hm2_7i96.0.encoder.01.index-invert 0
setp    hm2_7i96.0.encoder.01.index-mask 0
setp    hm2_7i96.0.encoder.01.index-mask-invert 0
setp    hm2_7i96.0.encoder.01.scale 200
net z-index-enable   <= joint.1.index-enable             =>  hm2_7i96.0.encoder.01.index-enable


#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net axis-select-x  halui.axis.x.select
net jog-x-pos      halui.axis.x.plus
net jog-x-neg      halui.axis.x.minus
net jog-x-analog   halui.axis.x.analog
net x-is-homed     halui.joint.0.is-homed
net axis-select-z  halui.axis.z.select
net jog-z-pos      halui.axis.z.plus
net jog-z-neg      halui.axis.z.minus
net jog-z-analog   halui.axis.z.analog
net z-is-homed     halui.joint.1.is-homed
net jog-selected-pos      halui.axis.selected.plus
net jog-selected-neg      halui.axis.selected.minus
net spindle-manual-cw     halui.spindle.0.forward
net spindle-manual-ccw    halui.spindle.0.reverse
net spindle-manual-stop   halui.spindle.0.stop
net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed
net MDI-mode              halui.mode.is-mdi

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

#  ---probe signal---

net probe-in     =>  motion.probe-input

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled


#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared

