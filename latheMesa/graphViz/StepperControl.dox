/**<br>
    \file StepperControl.dox
    *@addtogroup StepperControlOpenLoop
    \brief This file contains diagrams for controlling the stepper motors with HAL components.

   This diagram illustrates the .hal components and connections for stepper motor control.

   Default open loop uses pid.x component to convert joint.L.motor_pos_cmd into a velocity command for the stepgen. The feedback signal for the pid and the joint is the stepgen position-fb.

\dot
   digraph structs {
      concentrate=true
      rankdir="LR"
      label="pncconf open loop motor control"

      subgraph cluster_joint{
            label="joint.0"
            node [shape=plaintext]
            joint [shape="box" label=<
               <TABLE>
                  <TR> 
                        <TD>
                           <TABLE CELLBORDER="0" BORDER="0" ALIGN="LEFT">
                              <TR><TD port="i0">motor-pos-fb</TD></TR>
                           </TABLE>
                        </TD>
                        <TD>
                           <TABLE CELLBORDER="0" BORDER="0" ALIGN="RIGHT">
                              <TR><TD ALIGN="RIGHT" port="o0"> motor-pos-cmd </TD></TR> 
                              <TR><TD ALIGN="RIGHT" port="o1"> vel-cmd </TD></TR> 
                           </TABLE>
                        </TD>
                  </TR>                                             
               </TABLE>
            >
            ]
      }

      subgraph cluster_pid{
            label="pid.x"
            pid [shape="box" label=<
               <TABLE>
                  <TR> 
                        <TD>
                           <TABLE CELLBORDER="0" BORDER="0">
                              <TR><TD ALIGN="LEFT" port="i0">command</TD></TR>
                           </TABLE>
                        </TD>
                        <TD>
                           <TABLE CELLBORDER="0" BORDER="0">
                              <TR><TD ALIGN="RIGHT" port="o0">output</TD></TR> 
                           </TABLE>
                        </TD>
                  </TR> 
                  
                  <TR>
                        <TD COLSPAN="2">
                        <TABLE CELLBORDER="0" BORDER="0">
                           <TR >
                              <TD port="f0">feedback</TD>
                           </TR>
                        </TABLE>
                        </TD>
                  </TR>
               
               </TABLE>
            >
            ]
      }

      subgraph cluster_stepgen{
            label="stepgen"
            stepgen [shape="box" label=<
               <TABLE>
                  <TR><TD>
                        <TABLE CELLBORDER="0" BORDER="0">
                              <TR><TD ALIGN="LEFT" port="i0">velocity-cmd</TD></TR>
                        </TABLE>
                  </TD>
                  <TD>
                        <TABLE CELLBORDER="0" BORDER="0">
                              <TR><TD ALIGN="RIGHT" port="o0">position-fb</TD></TR> 
                        </TABLE>
                  </TD></TR>                    
               </TABLE>
            >]
      }

      joint -> pid -> stepgen [style="invisible" ];
      joint:o0    -> pid:i0       [label="x-pos-cmd" fontsize = "12" fontcolor="blue" color="blue"];
      pid:o0:e      -> stepgen:i0:w   [label="x-output" fontsize = "12" fontcolor="blue" color="blue"];
      stepgen:o0:e  -> joint:i0:w [label="x-pos-fb" fontsize = "12" fontcolor="blue" color="blue"];
      stepgen:o0:e  -> pid:f0:s   [label="x-pos-fb" fontsize = "12" fontcolor="blue" color="blue"];
   }
\enddot

*/
/**<br>
 *@addtogroup StepperControlClosed

   This diagram illustrates the .hal components and connections for closed loop stepper motor control.

   Default closed loop uses pid.x component to convert joint.L.motor_pos_cmd into a velocity command for the stepgen. The feedback signal for the pid and the joint is the encoder position.

      \dot
        digraph structs {
            concentrate=true
            rankdir="LR"
            label="pncconf closed loop motor control"

            subgraph cluster_joint{
                label="joint.0"
                node [shape=plaintext]
                joint [shape="box" label=<
                    <TABLE>
                        <TR> 
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0" ALIGN="LEFT">
                                    <TR><TD port="i0">motor-pos-fb</TD></TR>
                                </TABLE>
                            </TD>
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0" ALIGN="RIGHT">
                                    <TR><TD ALIGN="RIGHT" port="o0"> motor-pos-cmd </TD></TR> 
                                    <TR><TD ALIGN="RIGHT" port="o1"> vel-cmd </TD></TR> 
                                </TABLE>
                            </TD>
                        </TR>                                             
                    </TABLE>
                >
                ]
            }

            subgraph cluster_pid{
                label="pid.x"
                pid [shape="box" label=<
                    <TABLE>
                        <TR> 
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0">
                                   <TR><TD ALIGN="LEFT" port="i0">command</TD></TR>
                                   <TR><TD ALIGN="LEFT" port="i0">command-deriv</TD></TR>
                                </TABLE>
                            </TD>
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0">
                                    <TR><TD ALIGN="RIGHT" port="o0">output</TD></TR> 
                                </TABLE>
                            </TD>
                        </TR> 
                        
                        <TR>
                            <TD COLSPAN="2">
                            <TABLE CELLBORDER="0" BORDER="0">
                                <TR >
                                    <TD port="f0">feedback</TD>
                                    <TD port="f1">feedback-deriv</TD>
                                </TR>
                            </TABLE>
                            </TD>
                        </TR>
                    
                    </TABLE>
                >
                ]
            }

            subgraph cluster_stepgen{
                label="hm.0.stepgen.00"
                stepgen [shape="box" label=<
                    <TABLE>
                        <TR><TD>
                            <TABLE CELLBORDER="0" BORDER="0">
                                   <TR><TD ALIGN="LEFT" port="i0">velocity-cmd</TD></TR>
                            </TABLE>
                        </TD>
                        <TD>
                            <TABLE CELLBORDER="0" BORDER="0">
                                    <TR><TD ALIGN="RIGHT" port="o0">position-fb</TD></TR> 
                            </TABLE>
                        </TD></TR>                    
                    </TABLE>
                >]
            }


            subgraph cluster_encoder {
                label="hm.0.encoder.00"
                encoder [shape="box" label=<
                    <TABLE CELLBORDER="0" BORDER="0">
                       <TR><TD ALIGN="LEFT" port="o0">position</TD></TR>
                    </TABLE>
                >
                ]
            }

            joint:o0    -> pid:i0       [label="x-pos-cmd" fontsize = "12" fontcolor="blue" color="blue"];
            pid:o0      -> stepgen:i0   [label="x-output" fontsize = "12" fontcolor="blue" color="blue"];

            encoder:o0  -> joint:i0:w [label="x-pos-fb" fontsize = "12" fontcolor="blue" color="blue"];
            encoder:o0  -> pid:f0:s   [label="x-pos-fb" fontsize = "12" fontcolor="blue" color="blue"];
        }
    \enddot
*/











/**<br>
 *@addtogroup StepperControlOpenLoopProposed

 Proposed open loop
   - Use the trajectory planner velocity as an input to the pid FF1 calculation. This replaces a derivative estimatation within the pid. 
   - Use the encoder position as the joint position feedback instead of the stepgen position. (requires new signal name for pid feedback)

\dot
   digraph structs {
      concentrate=true
      rankdir="LR"
      label="pncconf open loop motor control"

      subgraph cluster_joint{
            label="joint.0"
            node [shape=plaintext]
            joint [shape="box" label=<
               <TABLE>
                  <TR> 
                        <TD>
                           <TABLE CELLBORDER="0" BORDER="0" ALIGN="LEFT">
                              <TR><TD port="i0">motor-pos-fb</TD></TR>
                           </TABLE>
                        </TD>
                        <TD>
                           <TABLE CELLBORDER="0" BORDER="0" ALIGN="RIGHT">
                              <TR><TD ALIGN="RIGHT" port="o0"> motor-pos-cmd </TD></TR> 
                              <TR><TD ALIGN="RIGHT" port="o1"> vel-cmd </TD></TR> 
                           </TABLE>
                        </TD>
                  </TR>                                             
               </TABLE>
            >
            ]
      }

      subgraph cluster_pid{
            label="pid.x"
            pid [shape="box" label=<
               <TABLE>
                  <TR> 
                        <TD>
                           <TABLE CELLBORDER="0" BORDER="0">
                              <TR><TD ALIGN="LEFT" port="i0">command</TD></TR>
                              <TR><TD ALIGN="LEFT" port="i1">vel-cmd</TD></TR>
                           </TABLE>
                        </TD>
                        <TD>
                           <TABLE CELLBORDER="0" BORDER="0">
                              <TR><TD ALIGN="RIGHT" port="o0">output</TD></TR> 
                           </TABLE>
                        </TD>
                  </TR> 
                  
                  <TR>
                        <TD COLSPAN="2">
                        <TABLE CELLBORDER="0" BORDER="0">
                           <TR >
                              <TD port="f0">feedback</TD>
                           </TR>
                        </TABLE>
                        </TD>
                  </TR>
               
               </TABLE>
            >
            ]
      }

      subgraph cluster_stepgen{
            label="stepgen"
            stepgen [shape="box" label=<
               <TABLE>
                  <TR><TD>
                        <TABLE CELLBORDER="0" BORDER="0">
                              <TR><TD ALIGN="LEFT" port="i0">velocity-cmd</TD></TR>
                        </TABLE>
                  </TD>
                  <TD>
                        <TABLE CELLBORDER="0" BORDER="0">
                              <TR><TD ALIGN="RIGHT" port="o0">position-fb</TD></TR> 
                        </TABLE>
                  </TD></TR>                    
               </TABLE>
            >]
      }
      subgraph cluster_encoder {
            label="hm.0.encoder.00"
            encoder [shape="box" label=<
               <TABLE CELLBORDER="0" BORDER="0">
                  <TR><TD ALIGN="LEFT" port="o0">position</TD></TR>
               </TABLE>
            >
            ]
      }

      joint:o0      -> pid:i0       [label="x-pos-cmd" fontsize = "12" fontcolor="blue" color="blue"];
      joint:o1      -> pid:i1       [label="x-vel-cmd" fontsize = "12" fontcolor="blue" color="red"];
      pid:o0:e      -> stepgen:i0:w [label="x-output" fontsize = "12" fontcolor="blue" color="blue"];
      stepgen:o0:e  -> pid:f0:s     [label="x-stepgen-fb" fontsize = "12" fontcolor="red" color="blue"];
      encoder:o1    -> joint:i0:w   [label="x-pos-fb" fontsize = "12" fontcolor="blue" color="red"];

   }
\enddot

*/
/**<br>
 *@addtogroup StepperControlClosedProposed

   Proposed closed loop 
   - Use the trajectory planner velocity as an input to the pid FF1 calculation. 
   - Use the encoder velocity as an input to the pid feedback derivative.

      \dot
        digraph structs {
            concentrate=true
            rankdir="LR"
            label="pncconf closed loop motor control"

            subgraph cluster_joint{
                label="joint.0"
                node [shape=plaintext]
                joint [shape="box" label=<
                    <TABLE>
                        <TR> 
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0" ALIGN="LEFT">
                                    <TR><TD port="i0">motor-pos-fb</TD></TR>
                                </TABLE>
                            </TD>
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0" ALIGN="RIGHT">
                                    <TR><TD ALIGN="RIGHT" port="o0"> motor-pos-cmd </TD></TR> 
                                    <TR><TD ALIGN="RIGHT" port="o1"> vel-cmd </TD></TR> 
                                </TABLE>
                            </TD>
                        </TR>                                             
                    </TABLE>
                >
                ]
            }

            subgraph cluster_pid{
                label="pid.x"
                pid [shape="box" label=<
                    <TABLE>
                        <TR> 
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0">
                                   <TR><TD ALIGN="LEFT" port="i0">command</TD></TR>
                                   <TR><TD ALIGN="LEFT" port="i0">command-deriv</TD></TR>
                                </TABLE>
                            </TD>
                            <TD>
                                <TABLE CELLBORDER="0" BORDER="0">
                                    <TR><TD ALIGN="RIGHT" port="o0">output</TD></TR> 
                                </TABLE>
                            </TD>
                        </TR> 
                        
                        <TR>
                            <TD COLSPAN="2">
                            <TABLE CELLBORDER="0" BORDER="0">
                                <TR >
                                    <TD port="f0">feedback</TD>
                                    <TD port="f1">feedback-deriv</TD>
                                </TR>
                            </TABLE>
                            </TD>
                        </TR>
                    
                    </TABLE>
                >
                ]
            }

            subgraph cluster_stepgen{
                label="hm.0.stepgen.00"
                stepgen [shape="box" label=<
                    <TABLE>
                        <TR><TD>
                            <TABLE CELLBORDER="0" BORDER="0">
                                   <TR><TD ALIGN="LEFT" port="i0">velocity-cmd</TD></TR>
                            </TABLE>
                        </TD>
                        <TD>
                            <TABLE CELLBORDER="0" BORDER="0">
                                    <TR><TD ALIGN="RIGHT" port="o0">position-fb</TD></TR> 
                            </TABLE>
                        </TD></TR>                    
                    </TABLE>
                >]
            }


            subgraph cluster_encoder {
                label="hm.0.encoder.00"
                encoder [shape="box" label=<
                    <TABLE CELLBORDER="0" BORDER="0">
                       <TR><TD ALIGN="LEFT" port="o0">position</TD></TR>
                        <TR><TD ALIGN="LEFT" port="o1">velocity</TD></TR>                  
                    </TABLE>
                >
                ]
            }

            joint:o0    -> pid:i0       [label="x-pos-cmd" fontsize = "12" fontcolor="blue" color="blue"];
            joint:o1    -> pid:i1       [label="x-vel-cmd" fontsize = "12" fontcolor="blue" color="red"];
            pid:o0      -> stepgen:i0   [label="x-output" fontsize = "12" fontcolor="blue" color="blue"];
      
            encoder:o0  -> joint:i0:w [label="x-pos-fb" fontsize = "12" fontcolor="blue" color="blue"];
            encoder:o0  -> pid:f0:s   [label="x-pos-fb" fontsize = "12" fontcolor="blue" color="blue"];
            encoder:o1  -> pid:f1:s   [label="x-vel-fb" fontsize = "12" fontcolor="blue" color="red"];
        }
    \enddot
*/
