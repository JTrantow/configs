# router3.hal
#
# This file sets up the basic motion of my router machine.
# 
loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS num_spindles=2
loadrt hostmot2
#
# Using double G540 firmware. 7i92_G540d.bin.
#   2 encoders for arc voltage and initial ohmic contact.
#   2 pwmgens P2 not used, P1 used for laser PWM.
#   6 stepgens. 4 for xyyz, 1 gets assigned to G540 charge pump, 1 for rotary axis.
#
loadrt hm2_eth board_ip="10.10.10.10" config="num_encoders=2 num_pwmgens=2 num_stepgens=6" 
setp   [HMOT](CARD0).watchdog.timeout_ns 5000000
loadrt pid names=pid.x,pid.y,pid.y2,pid.z,pid.s
loadrt abs names=abs.spindle
loadrt lowpass names=lowpass.spindle

addf [HMOT](CARD0).read          servo-thread
addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.y2.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
addf abs.spindle              servo-thread
addf lowpass.spindle          servo-thread
addf [HMOT](CARD0).write         servo-thread
setp [HMOT](CARD0).dpll.01.timer-us -50
setp [HMOT](CARD0).stepgen.timer-number 1

#*******************
#  AXIS X JOINT 0
#*******************

setp   pid.x.Pgain     [GENERIC_JOINT]P
setp   pid.x.Igain     0.0
setp   pid.x.Dgain     0.0
setp   pid.x.bias      0.0
setp   pid.x.FF0       0.0
setp   pid.x.FF1       [GENERIC_JOINT]FF1
setp   pid.x.FF2       0.0
setp   pid.x.deadband  [GENERIC_JOINT]DEADBAND
setp   pid.x.maxoutput [GENERIC_JOINT]MAX_OUTPUT
setp   pid.x.error-previous-target true
# This setting is to limit bogus stepgen velocity corrections caused by position feedback sample time jitter.
setp   pid.x.maxerror 0.012700

net x-index-enable  =>  pid.x.index-enable
net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-pos-fb        =>  pid.x.feedback
net x-output        <=  pid.x.output

# Step Gen signals/setup

setp   [HMOT](CARD0).stepgen.00.dirsetup        [GENERIC_JOINT]DIRSETUP
setp   [HMOT](CARD0).stepgen.00.dirhold         [GENERIC_JOINT]DIRHOLD
setp   [HMOT](CARD0).stepgen.00.steplen         [GENERIC_JOINT]STEPLEN
setp   [HMOT](CARD0).stepgen.00.stepspace       [GENERIC_JOINT]STEPSPACE
setp   [HMOT](CARD0).stepgen.00.position-scale  [JOINT_0]STEP_SCALE
setp   [HMOT](CARD0).stepgen.00.step_type        0
setp   [HMOT](CARD0).stepgen.00.control-type     1
setp   [HMOT](CARD0).stepgen.00.maxaccel         [JOINT_0]STEPGEN_MAXACCEL
setp   [HMOT](CARD0).stepgen.00.maxvel           [JOINT_0]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-vel-cmd    <= joint.0.vel-cmd
net x-output     => [HMOT](CARD0).stepgen.00.velocity-cmd
net x-pos-fb     <= [HMOT](CARD0).stepgen.00.position-fb
net x-pos-fb     => joint.0.motor-pos-fb
net x-enable     <= joint.0.amp-enable-out
net x-enable     => [HMOT](CARD0).stepgen.00.enable

# ---setup home / limit switch signals---

net max-home-x     =>  joint.0.home-sw-in joint.0.pos-lim-sw-in

#*******************
#  AXIS Y JOINT 1
#*******************

setp   pid.y.Pgain     [GENERIC_JOINT]P
setp   pid.y.Igain     0.0
setp   pid.y.Dgain     0.0
setp   pid.y.bias      0.0
setp   pid.y.FF0       0.0
setp   pid.y.FF1       [GENERIC_JOINT]FF1
setp   pid.y.FF2       0.0
setp   pid.y.deadband  [GENERIC_JOINT]DEADBAND
setp   pid.y.maxoutput [GENERIC_JOINT]MAX_OUTPUT
setp   pid.y.error-previous-target true
# This setting is to limit bogus stepgen velocity corrections caused by position feedback sample time jitter.
setp   pid.y.maxerror 0.012700

net y-index-enable  =>  pid.y.index-enable
net y-enable        =>  pid.y.enable
net y-pos-cmd       =>  pid.y.command
net y-pos-fb        =>  pid.y.feedback
net y-output        <=  pid.y.output

# Step Gen signals/setup

setp   [HMOT](CARD0).stepgen.01.dirsetup        [GENERIC_JOINT]DIRSETUP
setp   [HMOT](CARD0).stepgen.01.dirhold         [GENERIC_JOINT]DIRHOLD
setp   [HMOT](CARD0).stepgen.01.steplen         [GENERIC_JOINT]STEPLEN
setp   [HMOT](CARD0).stepgen.01.stepspace       [GENERIC_JOINT]STEPSPACE
setp   [HMOT](CARD0).stepgen.01.position-scale  [JOINT_1]STEP_SCALE
setp   [HMOT](CARD0).stepgen.01.step_type        0
setp   [HMOT](CARD0).stepgen.01.control-type     1
setp   [HMOT](CARD0).stepgen.01.maxaccel         [JOINT_1]STEPGEN_MAXACCEL
setp   [HMOT](CARD0).stepgen.01.maxvel           [JOINT_1]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net y-pos-cmd    <= joint.1.motor-pos-cmd
net y-vel-cmd    <= joint.1.vel-cmd
net y-output     => [HMOT](CARD0).stepgen.01.velocity-cmd
net y-pos-fb     <= [HMOT](CARD0).stepgen.01.position-fb
net y-pos-fb     => joint.1.motor-pos-fb
net y-enable     <= joint.1.amp-enable-out
net y-enable     => [HMOT](CARD0).stepgen.01.enable

# ---setup home / limit switch signals---

net max-home-y     =>  joint.1.home-sw-in joint.1.pos-lim-sw-in

#*******************
#  Tandem AXIS Y2 JOINT 2
#*******************

setp   pid.y2.Pgain     [GENERIC_JOINT]P
setp   pid.y2.Igain     0.0
setp   pid.y2.Dgain     0.0
setp   pid.y2.bias      0.0
setp   pid.y2.FF0       0.0
setp   pid.y2.FF1       [GENERIC_JOINT]FF1
setp   pid.y2.FF2       0.0
setp   pid.y2.deadband  [GENERIC_JOINT]DEADBAND
setp   pid.y2.maxoutput [GENERIC_JOINT]MAX_OUTPUT
setp   pid.y2.error-previous-target true
# This setting is to limit bogus stepgen velocity corrections caused by position feedback sample time jitter.
setp   pid.y2.maxerror 0.012700

net y2-index-enable  =>  pid.y2.index-enable
net y2-enable        =>  pid.y2.enable
net y2-pos-cmd       =>  pid.y2.command
net y2-pos-fb        =>  pid.y2.feedback
net y2-output        <=  pid.y2.output

# Step Gen signals/setup for tandem axis

setp   [HMOT](CARD0).stepgen.03.dirsetup        [GENERIC_JOINT]DIRSETUP
setp   [HMOT](CARD0).stepgen.03.dirhold         [GENERIC_JOINT]DIRHOLD
setp   [HMOT](CARD0).stepgen.03.steplen         [GENERIC_JOINT]STEPLEN
setp   [HMOT](CARD0).stepgen.03.stepspace       [GENERIC_JOINT]STEPSPACE
setp   [HMOT](CARD0).stepgen.03.position-scale  [JOINT_2]STEP_SCALE
setp   [HMOT](CARD0).stepgen.03.step_type        0
setp   [HMOT](CARD0).stepgen.03.control-type     1
setp   [HMOT](CARD0).stepgen.03.maxaccel         [JOINT_2]STEPGEN_MAXACCEL
setp   [HMOT](CARD0).stepgen.03.maxvel           [JOINT_2]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net y2-pos-cmd    <= joint.2.motor-pos-cmd
net y2-vel-cmd    <= joint.2.vel-cmd
net y2-output     => [HMOT](CARD0).stepgen.03.velocity-cmd
net y2-pos-fb     <= [HMOT](CARD0).stepgen.03.position-fb
net y2-pos-fb     => joint.2.motor-pos-fb
net y2-enable     <= joint.2.amp-enable-out
net y2-enable     => [HMOT](CARD0).stepgen.03.enable

# ---setup home / limit switch signals---

net max-home-y2     =>  joint.2.home-sw-in joint.2.pos-lim-sw-in

#*******************
#  AXIS Z JOINT 3
#*******************

setp   pid.z.Pgain     [GENERIC_JOINT]P
setp   pid.z.Igain     0.0
setp   pid.z.Dgain     0.0
setp   pid.z.bias      0.0
setp   pid.z.FF0       0.0
setp   pid.z.FF1       [GENERIC_JOINT]FF1
setp   pid.z.FF2       0.0
setp   pid.z.deadband  [GENERIC_JOINT]DEADBAND
setp   pid.z.maxoutput [GENERIC_JOINT]MAX_OUTPUT
setp   pid.z.error-previous-target true
# This setting is to limit bogus stepgen velocity corrections caused by position feedback sample time jitter.
setp   pid.z.maxerror 0.012700

net z-index-enable  =>  pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-pos-fb        =>  pid.z.feedback
net z-output        <=  pid.z.output

# Step Gen signals/setup

setp   [HMOT](CARD0).stepgen.02.dirsetup        [GENERIC_JOINT]DIRSETUP
setp   [HMOT](CARD0).stepgen.02.dirhold         [GENERIC_JOINT]DIRHOLD
setp   [HMOT](CARD0).stepgen.02.steplen         [GENERIC_JOINT]STEPLEN
setp   [HMOT](CARD0).stepgen.02.stepspace       [GENERIC_JOINT]STEPSPACE
setp   [HMOT](CARD0).stepgen.02.position-scale  [JOINT_3]STEP_SCALE
setp   [HMOT](CARD0).stepgen.02.step_type        0
setp   [HMOT](CARD0).stepgen.02.control-type     1
setp   [HMOT](CARD0).stepgen.02.maxaccel         [JOINT_3]STEPGEN_MAXACCEL
setp   [HMOT](CARD0).stepgen.02.maxvel           [JOINT_3]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net z-pos-cmd    <= joint.3.motor-pos-cmd
net z-vel-cmd    <= joint.3.vel-cmd
net z-output     => [HMOT](CARD0).stepgen.02.velocity-cmd
net z-pos-fb     <= [HMOT](CARD0).stepgen.02.position-fb
net z-pos-fb     => joint.3.motor-pos-fb
net z-enable     <= joint.3.amp-enable-out
net z-enable     => [HMOT](CARD0).stepgen.02.enable

# ---setup home / limit switch signals---

net max-home-z     =>  joint.3.home-sw-in joint.3.pos-lim-sw-in

#*******************
#  SPINDLE
#*******************

setp   pid.s.Pgain     [SPINDLE_0]P
setp   pid.s.Igain     [SPINDLE_0]I
setp   pid.s.Dgain     [SPINDLE_0]D
setp   pid.s.bias      [SPINDLE_0]BIAS
setp   pid.s.FF0       [SPINDLE_0]FF0
setp   pid.s.FF1       [SPINDLE_0]FF1
setp   pid.s.FF2       [SPINDLE_0]FF2
setp   pid.s.deadband  [SPINDLE_0]DEADBAND
setp   pid.s.maxoutput [SPINDLE_0]MAX_OUTPUT
setp   pid.s.error-previous-target true

net spindle-index-enable  =>  pid.s.index-enable
net spindle-enable        =>  pid.s.enable
net spindle-vel-cmd-rpm     => pid.s.command
net spindle-vel-fb-rpm      => pid.s.feedback
net spindle-output        <=  pid.s.output

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  spindle.0.speed-out-rps
net spindle-vel-cmd-rps-abs    <=  spindle.0.speed-out-rps-abs
net spindle-vel-cmd-rpm        <=  spindle.0.speed-out
net spindle-vel-cmd-rpm-abs    <=  spindle.0.speed-out-abs
net spindle-enable             <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-ccw                <=  spindle.0.reverse
net spindle-brake              <=  spindle.0.brake
net spindle-revs               =>  spindle.0.revs
net spindle-at-speed           =>  spindle.0.at-speed
net spindle-vel-fb-rps         =>  spindle.0.speed-in
net spindle-index-enable      <=>  spindle.0.index-enable       


#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net axis-select-x  halui.axis.x.select
net jog-x-pos      halui.axis.x.plus
net jog-x-neg      halui.axis.x.minus
net jog-x-analog   halui.axis.x.analog
net x-is-homed     halui.joint.0.is-homed
net axis-select-y  halui.axis.y.select
net jog-y-pos      halui.axis.y.plus
net jog-y-neg      halui.axis.y.minus
net jog-y-analog   halui.axis.y.analog
net y-is-homed     halui.joint.1.is-homed
net y2-is-homed    halui.joint.2.is-homed
net axis-select-z  halui.axis.z.select
net jog-z-pos      halui.axis.z.plus
net jog-z-neg      halui.axis.z.minus
net jog-z-analog   halui.axis.z.analog
net z-is-homed     halui.joint.3.is-homed
net jog-selected-pos      halui.axis.selected.plus
net jog-selected-neg      halui.axis.selected.minus
net spindle-manual-cw     halui.spindle.0.forward
net spindle-manual-ccw    halui.spindle.0.reverse
net spindle-manual-stop   halui.spindle.0.stop
net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed
net MDI-mode              halui.mode.is-mdi


#  ---probe signal---

net probe-in     =>  motion.probe-input

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

#  ---digital in / out signals---

#  ---manual tool change signals---

net tool-change-request    <= iocontrol.0.tool-change
net tool-change-confirmed  => iocontrol.0.tool-changed
net tool-number            <= iocontrol.0.tool-prep-number

#  ---ignore tool prepare requests---
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared

