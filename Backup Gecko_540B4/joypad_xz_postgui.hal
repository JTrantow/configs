#
# Joypad_xz_postgui.hal 
#
# This file is an example .hal for adding joystick jogging using a hal_input device.
# This was tested with a Logitech F310.
#
# This file connects three buttons to choose maximum jog speed in axis and joint modes.
# This file contains the HAL to connect the right joystick jog xz proportional to the joystick and the chosen jog speed.
# This file connects joypad buttons for jog plus/minus at the chosen jog speed.
#
# Add this file to postgui_call_list.hal using a line with "source joypad_postgui.hal".
#
loadusr -W hal_input -KRAL Dual

#
# Using Joypad buttons to set the speeds
#
# This feature makes the joypad safer to use as you must hold a speed selection button while jogging.
#
loadrt or2 count=2
loadrt mux4 count=1
addf or2.0 servo-thread
addf or2.1 servo-thread
addf mux4.0 servo-thread
#
# Set the jog speed for the joypad speed selection. Use numbers that make sense for your machine.
#
setp mux4.0.in0 0 # Setting this input to 0 prevents motion unless one of the other buttons is pressed.
setp mux4.0.in1 25  # Max jog speed when first speed select button is pressed.
setp mux4.0.in2 200 # Max jog speed when second speed select button is pressed.
setp mux4.0.in3 600 # Max jog speed when third speed select button is pressed.
#
# The following lines do the magic of setting the jog speed selection. You must hold at least one of the buttons while jogging.
#
net remote-speed-slow or2.0.in0 input.0.btn-joystick
net remote-speed-medium or2.1.in0 input.0.btn-thumb
net remote-speed-fast or2.0.in1 or2.1.in1 input.0.btn-thumb2

#net joy-speed-sel0 mux4.0.sel0 <= or2.0.out
#net joy-speed-sel1 mux4.0.sel1 <= or2.1.out
#net jog-speed <= mux4.0.out => halui.axis.jog-speed halui.joint.jog-speed
net joy-speed-sel0 <= or2.0.out  => mux4.0.sel0 
net joy-speed-sel1 <= or2.1.out  => mux4.0.sel1 
net jog-speed      <= mux4.0.out => halui.axis.jog-speed halui.joint.jog-speed

#
# Use analog joystick to modify the jog-speed.
# Use the right joystick to control lathe xz.
# Connect joint and axis pins so jogging works before and after homing.
#
net jog-x-analog <= input.0.abs-rz-position => halui.joint.0.analog halui.axis.x.analog 
net jog-z-analog <= input.0.abs-z-position => halui.joint.1.analog halui.axis.z.analog 

#
# Use the D-pad digital inputs to control the plus minus jog increments.
# Notice I am using the lathe keyboard convention or right/left being Z and up/down being X.
#
net jog-x-pos <= input.0.abs-hat0y-is-pos => halui.axis.x.plus  halui.joint.0.plus
net jog-x-neg <= input.0.abs-hat0y-is-neg => halui.axis.x.minus halui.joint.0.minus
net jog-z-pos <= input.0.abs-hat0x-is-pos => halui.axis.z.plus  halui.joint.1.plus
net jog-z-neg <= input.0.abs-hat0x-is-neg => halui.axis.z.minus halui.joint.1.minus



